// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountTagResponse account tag response
// swagger:model AccountTagResponse
type AccountTagResponse struct {

	// account Id
	AccountID string `json:"accountId,omitempty"`

	// key of the tag configurations
	// Required: true
	// Max Length: 127
	// Min Length: 3
	Key *string `json:"key"`

	// resource crn
	ResourceCrn string `json:"resourceCrn,omitempty"`

	// status
	// Enum: [DEFAULT USER_MANAGED]
	Status string `json:"status,omitempty"`

	// value of the tag configurations
	// Required: true
	// Max Length: 255
	// Min Length: 3
	Value *string `json:"value"`
}

// Validate validates this account tag response
func (m *AccountTagResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountTagResponse) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", m.Key); err != nil {
		return err
	}

	if err := validate.MinLength("key", "body", string(*m.Key), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("key", "body", string(*m.Key), 127); err != nil {
		return err
	}

	return nil
}

var accountTagResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DEFAULT","USER_MANAGED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accountTagResponseTypeStatusPropEnum = append(accountTagResponseTypeStatusPropEnum, v)
	}
}

const (

	// AccountTagResponseStatusDEFAULT captures enum value "DEFAULT"
	AccountTagResponseStatusDEFAULT string = "DEFAULT"

	// AccountTagResponseStatusUSERMANAGED captures enum value "USER_MANAGED"
	AccountTagResponseStatusUSERMANAGED string = "USER_MANAGED"
)

// prop value enum
func (m *AccountTagResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, accountTagResponseTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AccountTagResponse) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

func (m *AccountTagResponse) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	if err := validate.MinLength("value", "body", string(*m.Value), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("value", "body", string(*m.Value), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountTagResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountTagResponse) UnmarshalBinary(b []byte) error {
	var res AccountTagResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
