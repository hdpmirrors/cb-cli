// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ResizeRecommendationV4Response resize recommendation v4 response
// swagger:model ResizeRecommendationV4Response
type ResizeRecommendationV4Response struct {

	// scale down host groups
	// Unique: true
	ScaleDownHostGroups []string `json:"scaleDownHostGroups"`

	// scale up host groups
	// Unique: true
	ScaleUpHostGroups []string `json:"scaleUpHostGroups"`
}

// Validate validates this resize recommendation v4 response
func (m *ResizeRecommendationV4Response) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScaleDownHostGroups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScaleUpHostGroups(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResizeRecommendationV4Response) validateScaleDownHostGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.ScaleDownHostGroups) { // not required
		return nil
	}

	if err := validate.UniqueItems("scaleDownHostGroups", "body", m.ScaleDownHostGroups); err != nil {
		return err
	}

	return nil
}

func (m *ResizeRecommendationV4Response) validateScaleUpHostGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.ScaleUpHostGroups) { // not required
		return nil
	}

	if err := validate.UniqueItems("scaleUpHostGroups", "body", m.ScaleUpHostGroups); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResizeRecommendationV4Response) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResizeRecommendationV4Response) UnmarshalBinary(b []byte) error {
	var res ResizeRecommendationV4Response
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
